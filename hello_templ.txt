<html><head><link href=\"https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css\" rel=\"stylesheet\"><link href=\"./assets/styles.css\" rel=\"stylesheet\"><title>Hello Template</title><script>\r\n            var memoryData = {};\r\n            var chartInstance = null;\r\n            var data = null;\r\n            var socket;\r\n            var setButton = \"memory\";\r\n            var intervalId;\r\n            var firstHash = true;\r\n\r\n            function connectWebSocket() {\r\n                socket = new WebSocket(\"ws://localhost:8080/ws\");\r\n\r\n                socket.onopen = function(event) {\r\n                    setInterval(() => {\r\n                        firstHash = true;\r\n                    }, 30000);\r\n\r\n                    setIntervalHandler();\r\n                };\r\n\r\n                socket.onmessage = function(event) {\r\n                    data = JSON.parse(event.data);\r\n                    if (data.memory) {\r\n                        const memoryDiv = document.createElement('div');\r\n                        memoryDiv.classList.add('bg-gray-800', 'text-white', 'p-4', 'mb-4');\r\n                        document.querySelector('.info').innerText = \"\";\r\n                        for (let [key, value] of Object.entries(data.memory)) {\r\n                            const p = document.createElement('p');\r\n                            p.innerText = `${key}: ${value}`;\r\n                            if (firstHash === true) {\r\n                                memoryData[key] = parseFloat(value.split(\" \")[0]);\r\n                            }\r\n                            memoryDiv.appendChild(p);\r\n                        }\r\n                        document.querySelector('.info').appendChild(memoryDiv);\r\n                        if (firstHash === true) {\r\n                            initializeChart();\r\n                        }\r\n                        firstHash = false;\r\n                    }\r\n                };\r\n\r\n                socket.onclose = function(event) {\r\n                    console.log(\"WebSocket is closed now. Reconnecting...\");\r\n                    setTimeout(connectWebSocket, 1000); // Reconnect after 1 second\r\n                };\r\n\r\n                socket.onerror = function(error) {\r\n                    console.log(\"WebSocket error:\", error);\r\n                };\r\n            }\r\n\r\n            function setIntervalHandler() {\r\n                if (intervalId) {\r\n                    clearInterval(intervalId);\r\n                }\r\n\r\n                if (setButton === \"memory\") {\r\n                    intervalId = setInterval(fetchMemoryInfo, 2000);\r\n                } else if (setButton === \"os\") {\r\n                    intervalId = setInterval(fetchOSInfo, 2000);\r\n                } else if (setButton === \"process\") {\r\n                    intervalId = setInterval(fetchProcessInfo, 2000);\r\n                }\r\n            }\r\n\r\n            async function fetchMemoryInfo() {\r\n                try {\r\n                    setButton = \"memory\";\r\n                    setIntervalHandler();\r\n                    socket.send(\"fetchMemoryInfo\");\r\n                } catch (error) {\r\n                    console.error('Error fetching memory info:', error);\r\n                }\r\n            }\r\n\r\n            async function fetchOSInfo() {\r\n                try {\r\n                    setButton = \"os\";\r\n                    setIntervalHandler();\r\n                    socket.send(\"fetchOSInfo\");\r\n                } catch (error) {\r\n                    console.error('Error fetching OS info:', error);\r\n                }\r\n            }\r\n\r\n            async function fetchProcessInfo() {\r\n                try {\r\n                    setButton = \"process\";\r\n                    setIntervalHandler();\r\n                    socket.send(\"fetchProcessInfo\");\r\n                } catch (error) {\r\n                    console.error('Error fetching process info:', error);\r\n                }\r\n            }\r\n\r\n            function initializeChart() {\r\n                const ctx = document.getElementById('myChart').getContext('2d');\r\n                document.getElementById('myChart').style.display = 'block';\r\n\r\n                if (chartInstance !== null) {\r\n                    chartInstance.destroy();\r\n                    chartInstance = null;\r\n                }\r\n\r\n                chartInstance = new Chart(ctx, {\r\n                    type: 'doughnut',\r\n                    data: {\r\n                        labels: ['Total', 'Used', 'Free', 'Available'],\r\n                        datasets: [{\r\n                            label: 'Memory usage',\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 0.2)', // Red\r\n                                'rgba(54, 162, 235, 0.2)', // Blue\r\n                                'rgba(255, 206, 86, 0.2)', // Yellow\r\n                                'rgba(75, 192, 192, 0.2)'  // Green\r\n                            ],\r\n                            borderColor: [\r\n                                'rgba(255, 99, 132, 1)', // Red\r\n                                'rgba(54, 162, 235, 1)', // Blue\r\n                                'rgba(255, 206, 86, 1)', // Yellow\r\n                                'rgba(75, 192, 192, 1)'  // Green\r\n                            ],\r\n                            data: [memoryData.Total, memoryData.Used, memoryData.Free, memoryData.Available],\r\n                            borderWidth: 2\r\n                        }]\r\n                    },\r\n                });\r\n            }\r\n\r\n            function closeChart() {\r\n                if (chartInstance) {\r\n                    chartInstance.destroy();\r\n                    chartInstance = null;\r\n                }\r\n            }\r\n\r\n            window.onload = () => {\r\n                connectWebSocket();\r\n                document.getElementById('memory-btn').addEventListener('click', fetchMemoryInfo);\r\n                document.getElementById('process-btn').addEventListener('click', fetchProcessInfo);\r\n                document.getElementById('os-btn').addEventListener('click', fetchOSInfo);\r\n\r\n                fetchMemoryInfo();\r\n            };\r\n        </script></head><body class=\"bg-black\"><div class=\"p-4\"><button id=\"memory-btn\" class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Memory</button> <button id=\"process-btn\" class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Processes</button> <button id=\"os-btn\" class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">OS</button></div><div class=\"info p-4\"></div><div class=\"w-1/3 flex content-center mx-auto\"><div class=\"flex w-full justify-center items-center\"><canvas id=\"myChart\"></canvas></div></div><script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script></body></html>
